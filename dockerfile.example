FROM ubuntu:20.04

# Atualizando o sistema operacional
RUN apt update && apt upgrade -y

# Instalando dependecias necessárias para o processo de instalação
RUN apt-get update && apt-get install -y --no-install-recommends \
     curl gpg ca-certificates 


# Configurando e instalando o routinator 
RUN curl -fsSL https://packages.nlnetlabs.nl/aptkey.asc | gpg --dearmor -o /usr/share/keyrings/nlnetlabs-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/nlnetlabs-archive-keyring.gpg] https://packages.nlnetlabs.nl/linux/ubuntu \
    $(grep -oP '^VERSION_CODENAME=\K.*' /etc/os-release)-proposed main" | tee /etc/apt/sources.list.d/nlnetlabs-proposed.list > /dev/null || echo "Falha ao obter a chave e adicionar o novo repositório"  && \
        apt update || echo "Falha ao aplicar atualização com o repositório do routinator aplicado" && \
        apt policy routinator || echo "As politcas para o routinator não foram aplicadas" && \
        apt install -y routinator=0.9.0~rc3-1$(grep -oP '^VERSION_CODENAME=\K.*' /etc/os-release ) && echo "Instalação não ocorreu com sucesso"

    # Adicionar Routinator ao PATH
    ENV PATH="/root/.cargo/bin:${PATH}"
    
    # Criar usuário para o teste
    RUN useradd -ms /bin/bash user_exemple
    
    # Configurar diretório de trabalho
    WORKDIR /workspaces/project

    # copiar arquivos do projeto

    COPY ./app ./app

    COPY ./scripts ./scripts

    COPY ["./setup.py", "./README.md", "./start.py", "./"]

    # Declarar diretório de saída
    VOLUME /output /workspaces/project/output
    
    # Expor as portas para o routinator
    EXPOSE 8323 3323
    
    # Configurar o container para iniciar com o shell
    CMD ["/bin/bash"]